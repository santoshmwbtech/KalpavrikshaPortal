@model JBNClassLibrary.PromoWithCustomerIncompleteRpt


@using (Ajax.BeginForm("Promo", "CustomerIncompleteRpt", null, new AjaxOptions
{
    UpdateTargetId = "divList",
    OnSuccess = "onPromoSuccess_Ajax",
    HttpMethod = "post"
}, new { @class = "form-sample", @id = "form-promote", @enctype = "multipart/form-data" }))
{
    @Html.AntiForgeryToken()
    <div class="col-12 grid-margin">
        <div class="card card-outline-success">
            <div class="card-body">
                <div class="table-responsive pt-3">
                    <table class="table table-bordered dataGrid">
                        <thead>
                            <tr>
                                <th>
                                    Firm Name
                                </th>
                                <th>
                                    Mobile Number
                                </th>
                                <th>
                                    Owner Name
                                </th>
                                <th>
                                    Email ID
                                </th>
                                <th>
                                    City
                                </th>
                                <th>
                                    State
                                </th>
                                <th class="noExport text-center">Action</th>
                                <th class="noExport text-center">@Html.CheckBox("CheckAll", false, new { id = "select_all" })</th>
                            </tr>
                        </thead>
                        <tbody>
                            @if (Model != null)
                            {
                                int j = 0;
                                if (Model.customerIncompleteRpts.Count() > 0)
                                {
                                    foreach (var item in Model.customerIncompleteRpts)
                                    {
                                        <tr>
                                            <td>
                                                @Html.HiddenFor(a => a.customerIncompleteRpts[j].CustID)
                                                @Html.HiddenFor(a => a.customerIncompleteRpts[j].DeviceID)
                                                @Html.DisplayFor(a => a.customerIncompleteRpts[j].FirmName)
                                            </td>
                                            <td>
                                                @Html.TextBoxFor(a => a.customerIncompleteRpts[j].MobileNumber, new { @style = "border:none", @readonly = "readonly" })
                                            </td>
                                            <td>
                                                @Html.DisplayFor(a => a.customerIncompleteRpts[j].OwnerName)
                                            </td>
                                            <td>
                                                @Html.TextBoxFor(a => a.customerIncompleteRpts[j].EmailID, new { @style = "border:none", @readonly = "readonly" })
                                            </td>
                                            <td>
                                                @Html.DisplayFor(a => a.customerIncompleteRpts[j].CityName)
                                            </td>
                                            <td>
                                                @Html.DisplayFor(a => a.customerIncompleteRpts[j].StateName)
                                            </td>
                                            <td class="noExport text-center">
                                                @Ajax.ActionLink("Edit", "Edit", "CustomerIncompleteRpt", new { CustID = item.CustID }, new AjaxOptions { UpdateTargetId = "dvCreate", HttpMethod = "get", OnSuccess = "onEditSuccess", LoadingElementId = "progress" }, new { @class = "btn btn-primary btn-xs" }) |
                                                @Ajax.ActionLink("Block", "BlockCustomer", "CustomerIncompleteRpt", new { CustID = item.CustID, SearchByOption = Model.Result }, new AjaxOptions { UpdateTargetId = "divList", HttpMethod = "get", OnSuccess = "onBlockSuccess", LoadingElementId = "progress" }, new { @class = "btn btn-danger btn-xs" })
                                            </td>
                                            <td class="noExport text-center">
                                                @Html.CheckBoxFor(a => a.customerIncompleteRpts[j].IsChecked, new { @class = "chhselect" })
                                            </td>
                                        </tr>
                                        j++;
                                    }
                                }
                            }
                        </tbody>
                    </table>
                </div>

                <h4 class="card-title" style="margin-top:10px;">Promote</h4>

                <p class="card-description">
                </p>

                <div class="row">
                    <div class="col-md-2">

                    </div>
                    <div class="col-md-2">
                        <div class="form-group">
                            <div class="form-check">
                                @Html.CheckBoxFor(m => m.IsEmail) Email
                            </div>
                        </div>
                    </div>
                    <div class="col-md-2">
                        <div class="form-group">
                            <div class="form-check">
                                @Html.CheckBoxFor(m => m.IsSMS) SMS
                            </div>
                        </div>
                    </div>
                    <div class="col-md-2">
                        <div class="form-group">
                            <div class="form-check">
                                @Html.CheckBoxFor(m => m.IsNotification) Notification
                            </div>
                        </div>
                    </div>
                    <div class="col-md-2">
                        <div class="form-group">
                            <div class="form-check">
                                @Html.CheckBoxFor(m => m.IsWhatsApp) Whatsapp
                            </div>
                        </div>
                    </div>
                </div>
                <div class="clearfix"></div>
                <div id="SMSRow" style="display:none;">
                    <div class="row">
                        <div class="col-md-12">
                            <div class="form-group">
                                <label>SMS Template</label>
                                <div class="input-group">
                                    @Html.DropDownListFor(model => model.SMSTemplateID, (SelectList)ViewBag.SMSTemplates, "Select Template", new { @class = "form-control listbox", @required = "required", @onchange = "SMSTemplateChanged()" })
                                </div>
                            </div>
                        </div>
                        <div class="col-md-12">
                            <div class="form-group">
                                <label>SMS Body</label>
                                @Html.TextAreaFor(model => model.SMSBody, new { @class = "form-control input-lg", @required = "required" })
                                @Html.ValidationMessageFor(model => model.SMSBody, "", new { @class = "text-danger" })
                            </div>
                        </div>
                    </div>

                </div>
                <div id="EmailRow" style="display:none;">
                    <div class="row">
                        <div class="col-md-6">
                            <div class="form-group">
                                <label>Mail Subject</label>
                                @Html.TextBoxFor(model => model.MailSubject, new { @class = "form-control", @required = "required" })
                                @Html.ValidationMessageFor(model => model.MailSubject, "", new { @class = "text-danger" })
                            </div>
                        </div>
                        <div class="col-md-6">
                            <div class="form-group">
                                <label>Attachments</label>
                                <input type="file" id="postedFile" name="postedFile" class="form-control" />
                            </div>
                        </div>
                        <div class="col-md-12">
                            <div class="form-group">
                                <label>Your Message</label>
                                @Html.TextAreaFor(model => model.MailBody, new { @class = "form-control input-lg textarea-editor", @required = "required" })
                                @Html.ValidationMessageFor(model => model.MailBody, "", new { @class = "text-danger" })
                            </div>
                        </div>
                    </div>
                </div>
                <div id="NotificationRow" style="display:none;">
                    <div class="row">
                        <div class="col-md-6">
                            <div class="form-group">
                                <label>Notification Title</label>
                                <div class="input-group">
                                    @Html.TextBoxFor(model => model.Title, new { @class = "form-control", @required = "required" })
                                    @Html.ValidationMessageFor(model => model.Title, "", new { @class = "text-danger" })
                                </div>
                            </div>
                        </div>
                        <div class="col-md-6">
                            <div class="form-group">
                                <label>Image</label>
                                <input type="file" id="notificationImage" name="notificationImage" class="form-control" onchange="return check_extension(this.value);" />
                            </div>
                        </div>
                        <div class="col-md-12">
                            <div class="form-group">
                                <label>Message</label>
                                @Html.TextAreaFor(model => model.Body, new { @class = "form-control input-lg", @required = "required" })
                                @Html.ValidationMessageFor(model => model.Body, "", new { @class = "text-danger" })
                            </div>
                        </div>
                    </div>

                </div>
                <div class="clearfix"></div>
                <div class="text-center">
                    <button type="submit" class="btn btn-primary" onclick="return onPromoteClick()">Promote</button>
                </div>
            </div>
        </div>
    </div>
}



<script>
    function onPromoteClick() {
        if (!$('#IsEmail').is(':checked') && !$('#IsSMS').is(':checked') && !$('#IsWhatsApp').is(':checked') && !$('#IsNotification').is(':checked')) {
            swal("Check atleast one checkbox to promote");
            return false;
        }
        var checked_checkboxes = $(".dataGrid input[type=checkbox]:checked");
        if (checked_checkboxes.length == 0) {
            swal("Check atleast one checkbox from the above list to promote");
            return false;
        }
    }
    $("#IsEmail").click(function () {
        if (this.checked) {
            $("#IsSMS").prop('checked', false);
            $("#IsWhatsApp").prop('checked', false);
            $("#SMSRow").hide();
            $("#EmailRow").show();
            $("#NotificationRow").hide();
            $('.textarea-editor').summernote({
                height: 100, // set editor height
                minHeight: null, // set minimum height of editor
                maxHeight: null, // set maximum height of editor
                focus: false // set focus to editable area after initializing summernote
            });
        }
        else {
            $("#EmailRow").hide();
        }
    });
    $("#IsSMS").click(function () {
        if (this.checked) {
            $("#IsEmail").prop('checked', false);
            $("#IsWhatsApp").prop('checked', false);
            $("#SMSRow").show();
            $("#EmailRow").hide();
            $("#NotificationRow").hide();
        }
        else {
            $("#SMSRow").hide();
        }
    });
    $("#IsWhatsApp").click(function () {
        if (this.checked) {
            $("#IsEmail").prop('checked', false);
            $("#IsSMS").prop('checked', false);
            $("#SMSRow").hide();
            $("#EmailRow").hide();
            $("#NotificationRow").hide();
        }
    });
    $("#IsNotification").click(function () {
        if (this.checked) {
            $("#IsEmail").prop('checked', false);
            $("#IsWhatsApp").prop('checked', false);
            $("#IsSMS").prop('checked', false);
            $("#NotificationRow").show();
            $("#EmailRow").hide();
            $("#SMSRow").hide();
        }
        else {
            $("#NotificationRow").hide();
        }
    });
    function SMSTemplateChanged() {
        var TemplateID = $("#SMSTemplateID").val();
        if (TemplateID != "" && TemplateID != null) {
            $("#progress").show();
            $.ajax({
                type: 'POST',
                url: '@Url.Action("GetSMSTemplate", "BusinessTypeWiseRpt")',
                dataType: "json",
                data: { TemplateID: TemplateID},
                success: function (response) {
                    if (response == "sessionexpired") {
                        window.location = '@Url.Action("Index", "Login")';
                    }
                    $("#SMSBody").val(response.TemplateBody);
                    $("#progress").hide();
                },
                error: function () {
                    $("#progress").hide();
                }
            });
        }
    }
</script>
<script>
    $.validator.unobtrusive.parse(document);
</script>
<script>
    $("#frm-example1").validate();
</script>
<script>
    var hash = {
        '.png': 1,
        '.jpg': 1,
        '.jpeg': 1,
    };

    function check_extension(filename) {
        var re = /\..+$/;
        var ext = filename.match(re);
        if (hash[ext]) {
            return true;
        } else {
            swal("Error", "Invalid file, please upload image", "error");
            $("#notificationImage").val('');
            return false;
        }
    }
</script>
