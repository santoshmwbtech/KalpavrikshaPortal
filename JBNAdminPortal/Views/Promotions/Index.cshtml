@model JBNClassLibrary.PromotionsDTO

@{
    ViewBag.Title = "Promotions";
}


<div class="main-panel" id="mainDiv">
    <div class="content-wrapper">
        <div class="row">
            <div class="col-lg-12 grid-margin stretch-card">
                <div class="card">
                    <div class="card-body">
                        <h4 class="card-title">
                            Promotion
                        </h4>
                        @using (Ajax.BeginForm("Promote", "Promotions", null, new AjaxOptions
                        {
                            OnSuccess = "onSuccess_Ajax",
                            OnFailure = "onFailure_Ajax",
                            HttpMethod = "post",
                            LoadingElementId = "progress"
                        }, new { @enctype = "multipart/form-data" }))
                        {
                            <div class="row">
                                <div class="col-md-4">

                                </div>
                                <div class="col-md-4">
                                    <div class="form-group">
                                        <label>To Date</label>
                                        @Html.DropDownListFor(model => model.NotificationType, (SelectList)ViewBag.NotificationType, "Select one", new { @class = "form-control dropdowns", @required = "required" })
                                        @Html.ValidationMessageFor(model => model.SMSBody, "", new { @class = "text-danger" })
                                    </div>
                                </div>
                                <div class="col-md-4">

                                </div>

                            </div>
                            <div class="row">
                                <div class="col-md-2">

                                </div>
                                <div class="col-md-2">
                                    <div class="form-group">
                                        <div class="form-check">
                                            @Html.CheckBoxFor(m => m.IsEmail) Email
                                        </div>
                                    </div>
                                </div>
                                <div class="col-md-2">
                                    <div class="form-group">
                                        <div class="form-check">
                                            @Html.CheckBoxFor(m => m.IsSMS) SMS
                                        </div>
                                    </div>
                                </div>
                                <div class="col-md-2">
                                    <div class="form-group">
                                        <div class="form-check">
                                            @Html.CheckBoxFor(m => m.IsNotification) Notification
                                        </div>
                                    </div>
                                </div>
                                <div class="col-md-2">
                                    <div class="form-group">
                                        <div class="form-check">
                                            @Html.CheckBoxFor(m => m.IsWhatsApp) Whatsapp
                                        </div>
                                    </div>
                                </div>
                            </div>
                            <div id="SMSRow" style="display:none;">
                                <div class="row">
                                    <div class="col-md-12">
                                        <div class="form-group">
                                            <label>SMS Template</label>
                                            <div class="input-group">
                                                @Html.DropDownListFor(model => model.SMSTemplateID, (SelectList)ViewBag.SMSTemplates, "Select Template", new { @class = "form-control", @required = "required", @onchange = "SMSTemplateChanged()" })
                                            </div>
                                        </div>
                                    </div>
                                    <div class="col-md-12">
                                        <div class="form-group">
                                            <label>SMS Body</label>
                                            @Html.TextAreaFor(model => model.SMSBody, new { @class = "form-control input-lg", @required = "required" })
                                            @Html.ValidationMessageFor(model => model.SMSBody, "", new { @class = "text-danger" })
                                        </div>
                                    </div>
                                </div>
                            </div>
                            <div id="EmailRow" style="display:none;">
                                <div class="row">
                                    <div class="col-md-6">
                                        <div class="form-group">
                                            <label>Mail Subject</label>
                                            @Html.TextBoxFor(model => model.MailSubject, new { @class = "form-control", @required = "required" })
                                            @Html.ValidationMessageFor(model => model.MailSubject, "", new { @class = "text-danger" })
                                        </div>
                                    </div>
                                    <div class="col-md-6">
                                        <div class="form-group">
                                            <label>Attachments</label>
                                            <input type="file" id="postedFile" name="postedFile" class="form-control" />
                                        </div>
                                    </div>
                                    <div class="col-md-12">
                                        <div class="form-group">
                                            <label>Your Message</label>
                                            @Html.TextAreaFor(model => model.MailBody, new { @class = "form-control input-lg textarea-editor", @required = "required" })
                                            @Html.ValidationMessageFor(model => model.MailBody, "", new { @class = "text-danger" })
                                        </div>
                                    </div>
                                </div>
                            </div>
                            <div id="NotificationRow" style="display:none;">
                                <div class="row">
                                    <div class="col-md-6">
                                        <div class="form-group">
                                            <label>Notification Title</label>
                                            <div class="input-group">
                                                @Html.TextBoxFor(model => model.Title, new { @class = "form-control", @required = "required" })
                                                @Html.ValidationMessageFor(model => model.Title, "", new { @class = "text-danger" })
                                            </div>
                                        </div>
                                    </div>
                                    <div class="col-md-6">
                                        <div class="form-group">
                                            <label>Image</label>
                                            <input type="file" id="notificationImage" name="notificationImage" class="form-control" onchange="return check_extension(this.value);" />
                                        </div>
                                    </div>
                                    <div class="col-md-12">
                                        <div class="form-group">
                                            <label>Message</label>
                                            @Html.TextAreaFor(model => model.Body, new { @class = "form-control input-lg", @required = "required" })
                                            @Html.ValidationMessageFor(model => model.Body, "", new { @class = "text-danger" })
                                        </div>
                                    </div>
                                </div>
                            </div>
                            <div class="clearfix"></div>
                            <div class="text-center">
                                <button type="submit" class="btn btn-primary" onclick="return onPromoteClick()">Promote</button>
                            </div>
                        }
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>
<div id="progress" class="modal">
    <div class="center" style="margin: 0px; padding: 0px; position: fixed; right: 0px; top: 0px; width: 100%; height: 100%; background-color: rgb(102, 102, 102); z-index: 30001; opacity: 0.8;">
        <p style="position: absolute; color: White; top: 50%; left: 45%;">
            Loading, please wait... <img src="~/images/loading.gif" height="100" width="100" />
        </p>
    </div>
</div>
<script>
    function onSuccess_Ajax(data) {
        if (data == "sessionexpired") {
            swal({
                text: "Your Session Expired!! Please login again",
            }).then(function () {
                window.location = '@Url.Action("Index", "Login")';
            });
        }
        else {
            @*window.location = '@Url.Action("DownloadResponseData", "BusinessTypeWiseRpt")?fileGuid=' + data.FileGuid + '&filename=' + data.FileName;*@
            swal({
                text: data,
            }).then(function () {
                @*window.location = '@Url.Action("DownloadResponseData", "BusinessTypeWiseRpt")?fileGuid=' + Data.FileGuid + '&filename=' + Data.FileName;*@
                window.location = '@Url.Action("Index", "Promotions")';
            });
        }
    }
    function OnBeginEdit() {

    }
    function onBegin_Ajax() {
    }
    function onFailure_Ajax() {
        swal("Error", "Please try again later", "error");
    }
    function Ajax_OnShareComplete() {

    }
</script>
<script>
    function onPromoteClick() {
        $("#progress").show();
        if (!$('#IsEmail').is(':checked') && !$('#IsSMS').is(':checked') && !$('#IsWhatsApp').is(':checked') && !$('#IsNotification').is(':checked')) {
            swal("Check atleast one checkbox to promote");
            $("#progress").hide();
            return false;
        }
    }
    $("#IsEmail").click(function () {
        if (this.checked) {
            $("#IsSMS").prop('checked', false);
            $("#IsWhatsApp").prop('checked', false);
            $("#IsNotification").prop('checked', false);
            $("#SMSRow").hide();
            $("#EmailRow").show();
            $("#NotificationRow").hide();
            $('.textarea-editor').summernote({
                height: 100, // set editor height
                minHeight: null, // set minimum height of editor
                maxHeight: null, // set maximum height of editor
                focus: false // set focus to editable area after initializing summernote
            });
        }
        else {
            $("#EmailRow").hide();
        }
    });
    $("#IsSMS").click(function () {
        if (this.checked) {
            $("#IsEmail").prop('checked', false);
            $("#IsWhatsApp").prop('checked', false);
            $("#IsNotification").prop('checked', false);
            $("#SMSRow").show();
            $("#EmailRow").hide();
            $("#NotificationRow").hide();
        }
        else {
            $("#SMSRow").hide();
        }
    });
    $("#IsWhatsApp").click(function () {
        if (this.checked) {
            $("#IsEmail").prop('checked', false);
            $("#IsSMS").prop('checked', false);
            $("#IsNotification").prop('checked', false);
            $("#SMSRow").hide();
            $("#EmailRow").hide();
            $("#NotificationRow").hide();
        }
    });
    $("#IsNotification").click(function () {
        if (this.checked) {
            $("#IsEmail").prop('checked', false);
            $("#IsWhatsApp").prop('checked', false);
            $("#IsSMS").prop('checked', false);
            $("#NotificationRow").show();
            $("#EmailRow").hide();
            $("#SMSRow").hide();
        }
        else {
            $("#NotificationRow").hide();
        }
    });
    function SMSTemplateChanged() {
        var TemplateID = $("#SMSTemplateID").val();
        if (TemplateID != "" && TemplateID != null) {
            $("#progress").show();
            $.ajax({
                type: 'POST',
                url: '@Url.Action("GetSMSTemplate", "BusinessTypeWiseRpt")',
                dataType: "json",
                data: { TemplateID: TemplateID},
                success: function (response) {
                    if (response == "sessionexpired") {
                        window.location = '@Url.Action("Index", "Login")';
                    }
                    $("#SMSBody").val(response.TemplateBody);
                    $("#progress").hide();
                },
                error: function () {
                    $("#progress").hide();
                }
            });
        }
    }
</script>
<script>
    var hash = {
        '.png': 1,
        '.jpg': 1,
        '.jpeg': 1,
    };

    function check_extension(filename) {
        var re = /\..+$/;
        var ext = filename.match(re);
        if (hash[ext]) {
            return true;
        } else {
            swal("Error", "Invalid file, please upload image", "error");
            $("#notificationImage").val('');
            return false;
        }
    }
</script>