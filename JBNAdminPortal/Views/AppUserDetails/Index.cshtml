@model JBNClassLibrary.CustomerDetails

@{
    ViewBag.Title = "Customer Details";
}

<script type="text/javascript" src="https://maps.googleapis.com/maps/api/js?key=AIzaSyAwzwIHd-jN_C4epB8AZBfo59UJZQZsm-c"></script>
<script type="text/javascript">
        var markers = @Html.Raw(ViewBag.Markers);
        window.onload = function () {
            var mapOptions = {
                center: new google.maps.LatLng(markers[0].lat, markers[0].lng),
                zoom: 18,
                mapTypeId: google.maps.MapTypeId.ROADMAP
            };
            var infoWindow = new google.maps.InfoWindow();
            var map = new google.maps.Map(document.getElementById("dvMap"), mapOptions);
            for (i = 0; i < markers.length; i++) {
                var data = markers[i]
                var myLatlng = new google.maps.LatLng(data.lat, data.lng);
                var marker = new google.maps.Marker({
                    position: myLatlng,
                    map: map,
                    title: data.title
                });
                (function (marker, data) {
                    google.maps.event.addListener(marker, "click", function (e) {
                        infoWindow.setContent(data.description);
                        infoWindow.open(map, marker);
                    });
                })(marker, data);
            }
        }
</script>

<div class="main-panel">
    <div class="content-wrapper">
        <div class="row">
            <div class="col-12 grid-margin accordion">
                <div class="card card-outline-primary">
                    <div class="card-body">
                        <h4 class="card-title">Customer Details</h4>
                        <p class="card-description">

                        </p>
                        @using (Ajax.BeginForm("Update", "AppUserDetails", null, new AjaxOptions
                        {
                            OnSuccess = "onSuccess_Ajax",
                            HttpMethod = "post"
                        }, new { @class = "form-sample" }))
                        {
                            @Html.AntiForgeryToken()
                            <div class="row">
                                <div class="col-md-6">
                                    <div class="form-sample">
                                        <div class="form-group">
                                            <label>Firm Name</label>
                                            @Html.HiddenFor(model => model.CustID)
                                            @Html.EditorFor(model => model.FirmName, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly" } })
                                        </div>
                                        <div class="form-group">
                                            <label>Customer Name</label>
                                            @Html.EditorFor(model => model.CustName, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly" } })
                                        </div>
                                        <div class="form-group">
                                            <label>Mobile Number</label>
                                            @Html.EditorFor(model => model.MobileNumber, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly" } })
                                        </div>
                                        <div class="form-group">
                                            <label>Email ID</label>
                                            @Html.EditorFor(model => model.EmailID, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly" } })
                                        </div>
                                        <label>Interested Area Limit To do Business</label>
                                        <div class="form-check form-check-flat form-check-primary">
                                            <label class="form-check-label">
                                                <input type="checkbox" class="form-check-input" checked='@Model.InterstCity.Value' disabled>
                                                City
                                            </label>
                                        </div>
                                        <div class="form-check form-check-flat form-check-primary">
                                            <label class="form-check-label">
                                                <input type="checkbox" class="form-check-input" checked='@Model.InterstState.Value' disabled>
                                                State
                                            </label>
                                        </div>
                                        <div class="form-check form-check-flat form-check-primary">
                                            <label class="form-check-label">
                                                <input type="checkbox" class="form-check-input" checked='@Model.InterstCountry.Value' disabled>
                                                Country
                                            </label>
                                        </div>
                                        <label>Status</label>
                                        <div class="form-check form-check-flat form-check-primary">
                                            @*@Html.CheckBoxFor(model => model.IsActive) Is Active*@
                                            <label class="form-check-label">
                                                <input type="checkbox" class="form-check-input" id="chkIsActive" name="chkIsActive" checked='@Model.IsActive'>
                                                Is Active
                                            </label>
                                            @Html.HiddenFor(model => model.IsActive)
                                        </div>
                                        <div class="form-group" id="reasonRow">
                                            <label>Reason for Deactivate</label>
                                            @Html.EditorFor(model => model.ReasonForDeactivate, new { htmlAttributes = new { @class = "form-control", @required = "required" } })
                                            @Html.ValidationMessageFor(model => model.ReasonForDeactivate, "", new { @class = "text-danger" })
                                        </div>
                                    </div>
                                </div>
                                <div class="col-md-6">
                                    <div class="form-sample">
                                        <div class="form-group">
                                            <label>Buiding / Road Address</label>
                                            @Html.EditorFor(model => model.BillingAddress, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly" } })
                                        </div>
                                        <div class="form-group">
                                            <label>Area</label>
                                            @Html.EditorFor(model => model.Area, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly" } })
                                        </div>
                                        <div class="form-group">
                                            <label>State</label>
                                            @Html.EditorFor(model => model.state.StateName, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly" } })
                                        </div>
                                        <div class="form-group">
                                            <label>City</label>
                                            @Html.EditorFor(model => model.city.VillageLocalityName, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly" } })
                                        </div>
                                        <div class="form-group">
                                            <label>Pin Code</label>
                                            @Html.EditorFor(model => model.Pincode, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly" } })
                                        </div>
                                    </div>
                                </div>
                            </div>
                            <div class="row">
                                <div class="clearfix"></div>
                                <div class="row col-lg-12">
                                    <div class="col-lg-4 grid-margin stretch-card">
                                        <div class="card">
                                            <div class="card-body">
                                                <h4 class="card-title">Business Types</h4>
                                                <p class="card-description">

                                                </p>
                                                <div class="table-responsive">
                                                    <table class="table table-condensed">
                                                        <thead>
                                                            <tr>
                                                                <th>Sl No</th>
                                                                <th>Business Type</th>
                                                            </tr>
                                                        </thead>
                                                        <tbody>
                                                            @if (Model.BusinessTypeWithCust != null)
                                                            {
                                                                if (Model.BusinessTypeWithCust.Count > 0)
                                                                {
                                                                    int i = 1;
                                                                    foreach (var item in Model.BusinessTypeWithCust)
                                                                    {
                                                                        <tr>
                                                                            @{
                                                                                if (item.Checked == true)
                                                                                {
                                                                                    <td>@i</td>
                                                                                    <td>@item.BusinessTypeName</td>
                                                                                }
                                                                                i++;
                                                                            }
                                                                        </tr>
                                                                    }
                                                                }
                                                            }
                                                        </tbody>
                                                    </table>
                                                </div>
                                            </div>
                                        </div>
                                    </div>
                                    <div class="col-lg-8 grid-margin stretch-card">
                                        <div class="card">
                                            <div class="card-body">
                                                <h4 class="card-title">Categories</h4>
                                                <p class="card-description">

                                                </p>
                                                <div class="table-responsive">
                                                    <table class="table table-hover dataGrid">
                                                        <thead>
                                                            <tr>
                                                                <th>Main CategoryName</th>
                                                                <th>SubCategory Name</th>
                                                            </tr>
                                                        </thead>
                                                        <tbody>
                                                            @if (Model.SubCategoryTypeWithCust != null)
                                                            {
                                                                if (Model.SubCategoryTypeWithCust.Count > 0)
                                                                {
                                                                    foreach (var item in Model.SubCategoryTypeWithCust)
                                                                    {
                                                                        <tr>
                                                                            <td>@item.MainCategoryName</td>
                                                                            <td>@item.SubCategoryName</td>
                                                                        </tr>
                                                                    }
                                                                }
                                                            }
                                                        </tbody>
                                                    </table>
                                                </div>
                                            </div>
                                        </div>
                                    </div>
                                </div>
                                <div class="clearfix"></div>
                            </div>
                            <div class="row">
                                <div class="col-md-6">
                                    <div class="form-sample">
                                        <div class="form-group">
                                            <label>Taxation Type</label>
                                            @Html.EditorFor(model => model.RegistrationType, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly" } })
                                        </div>
                                        <div class="form-group">
                                            <label>GST Number</label>
                                            @Html.EditorFor(model => model.TinNumber, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly" } })
                                        </div>
                                        <div class="form-group">
                                            <label>PAN Number</label>
                                            @Html.EditorFor(model => model.PanNumber, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly" } })
                                        </div>
                                    </div>
                                </div>
                                <div class="col-md-6">
                                    <div class="form-sample">
                                        <div class="form-group">
                                            <label>Bank Name</label>
                                            @Html.EditorFor(model => model.Bankname, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly" } })
                                        </div>
                                        <div class="form-group">
                                            <label>Bank Branch name</label>
                                            @Html.EditorFor(model => model.BankBranchName, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly" } })
                                        </div>
                                        <div class="form-group">
                                            <label>Bank City Name</label>
                                            @Html.EditorFor(model => model.BankCity, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly" } })
                                        </div>
                                        <div class="form-group">
                                            <label>Account Number</label>
                                            @Html.EditorFor(model => model.Accountnumber, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly" } })
                                        </div>
                                        <div class="form-group">
                                            <label>IFSC Code</label>
                                            @Html.EditorFor(model => model.IFSCCode, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly" } })
                                        </div>
                                    </div>
                                </div>
                            </div>

                            <div class="row">
                                <div class="clearfix"></div>
                                <div class="col-lg-12 grid-margin stretch-card">
                                    <div class="card">
                                        <div class="card-body">
                                            <h4 class="card-title">Status History</h4>
                                            <p class="card-description">

                                            </p>
                                            <div class="table-responsive">
                                                <table class="table table-hover dataGrid">
                                                    <thead>
                                                        <tr>
                                                            <th>Date</th>
                                                            <th>Comments</th>
                                                            <th>Status</th>
                                                            <th>Status changed By</th>
                                                        </tr>
                                                    </thead>
                                                    <tbody>
                                                        @if (Model.statusHistories != null)
                                                        {
                                                            if (Model.statusHistories.Count > 0)
                                                            {
                                                                foreach (var item in Model.statusHistories)
                                                                {
                                                                    <tr>
                                                                        <td>@item.CreatedDate</td>
                                                                        <td>@item.Comments</td>
                                                                        <td>@item.CustomerStatus</td>
                                                                        <td>@item.CreatedByUser</td>
                                                                    </tr>
                                                                }
                                                            }
                                                        }
                                                    </tbody>
                                                </table>
                                            </div>
                                        </div>
                                    </div>
                                </div>
                                <div class="clearfix"></div>
                            </div>

                            <div class="row">
                                <div class="col-md-12">
                                    <div id="dvMap" style="width: 100%; height: 300px">
                                    </div>
                                </div>
                            </div>
                            <div class="clearfix"></div>
                            <br />

                            <div class="text-center">
                                @if (Session["MenuMaster"] != null)
                                {
                                    var MenuMaster = (List<JBNClassLibrary.FormPermissionItem>)Session["MenuMaster"];
                                    if (MenuMaster.Any(m => m.SubMenuName.ToLower() == "roles" && m.IsEdit == true) || Session["RoleID"].ToString() == "1")
                                    {
                                        <button type="submit" class="btn btn-primary ">Update</button>
                                    }
                                }
                                <a href='@Url.Action("Index", "AppUsers")' class="btn btn-danger">Back</a>
                            </div>
                        }
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>
<script>
    function onCompleteCreate_Ajax() {
    }
    function onBegin_Ajax(data) {
    }
    function onFailure_Ajax() {
        swal("Error", "Please try again later", "error");
        }
        function onSuccess_Ajax(data) {
        if (data == "success") {
            swal({
                title: "Success!",
                text: "Customer details updated successfully!!",
                type: "success",
                icon: "success",
            }).then(function () {
                window.location = '@Url.Action("Index", "AppUsers")';
            });
        }
        else if (data == "error") {
            swal({
                title: "Error",
                text: "Your Session is expired, click OK to login again",
                type: "error",
                icon: "error",
            }).then(function () {
                window.location = '@Url.Action("Index", "Login")';
            });
        }
        else {
            swal({
                title: "Error",
                text: "Please try again later..",
                type: "error",
                icon: "error",
            }).then(function () {
                window.location = '@Url.Action("Index", "Login")';
            });
        }
    }
    function onUpdateSuccess_Ajax() {

    }
</script>

<script>
    $(document).ready(function () {
        if ($("#chkIsActive").prop('checked')) {
            $('#reasonRow').hide();
        }
        else {
            $('#reasonRow').show();
        }
        $('#chkIsActive').click(function () {
            if ($(this).prop('checked')) {
                $("#ReasonForDeactivate").val('');
                $('#reasonRow').hide();
                $('#IsActive').val(true);
            }
            else {
                $('#reasonRow').show();
                $('#IsActive').val(false);
            }
        });
    });
</script>

<script>
    $(document).ready(function () {
        $('table.display').DataTable({
            dom: 'Bfrtip',
            buttons: [

            ]
        });
    });
</script>