@model JBNClassLibrary.ItemCategory


@{
    ViewBag.Title = "Approve Item Category";
}

<div class="main-panel" id="mainDiv">
    <div class="content-wrapper">
        <div class="row">
            <div class="col-lg-12 grid-margin stretch-card">
                <div class="card">
                    <div class="card-body">
                        <h4 class="card-title">
                            Item Category
                        </h4>

                        @using (Ajax.BeginForm("ApproveItemCategory", "ApproveCategories", null, new AjaxOptions
                        {
                            OnSuccess = "onItemSuccess_Ajax",
                            HttpMethod = "post",
                            LoadingElementId = "progress"
                        }))
                        {
                            <div class="row">
                                <div class="col-md-6">
                                    <div class="form-group">
                                        <label>Item Category Name</label>
                                        @Html.EditorFor(model => model.ItemName, new { htmlAttributes = new { @class = "form-control", @onkeypress = "return isCharacter(event)", @autocomplete = "off" } })
                                        @Html.ValidationMessageFor(model => model.ItemName, "", new { @class = "text-danger" })
                                        @Html.HiddenFor(model => model.ItemId)
                                        @Html.HiddenFor(model => model.ID)
                                    </div>
                                </div>
                                <div class="col-md-6">
                                    <div class="form-group">
                                        <label>Child Category Name</label>
                                        @Html.DropDownListFor(a => a.ChildCategoryId, (SelectList)ViewBag.ChildCategory, "Select Child Category", new { @class = "form-control dropdowns", @onchange = "ddlChildCategoryChanged()" })
                                        @Html.ValidationMessageFor(model => model.ChildCategoryId, "", new { @class = "text-danger" })
                                        @Html.HiddenFor(model => model.ChildCategoryName)
                                    </div>
                                </div>
                                <div class="col-md-6">
                                    <div class="form-group">
                                        <label>Sub Category</label>
                                        @Html.EditorFor(model => model.SubCategoryName, new { htmlAttributes = new { @class = "form-control", disabled = "disabled", @readonly = "readonly" } })
                                        @Html.ValidationMessageFor(model => model.SubCategoryName, "", new { @class = "text-danger" })
                                        @Html.HiddenFor(model => model.SubCategoryId)
                                    </div>
                                </div>
                                <div class="col-md-6">
                                    <div class="form-group">
                                        <label>Main Category</label>
                                        @Html.EditorFor(model => model.MainCategoryName, new { htmlAttributes = new { @class = "form-control", disabled = "disabled", @readonly = "readonly" } })
                                        @Html.ValidationMessageFor(model => model.MainCategoryName, "", new { @class = "text-danger" })
                                    </div>
                                </div>
                                <div class="col-md-6">
                                    <div class="form-group">
                                        <label>Reffered By or Reason </label>
                                        @Html.EditorFor(model => model.ItemRefferedByOrReason, new { htmlAttributes = new { @class = "form-control", @onkeypress = "return isCharacter(event)", @autocomplete = "off" } })
                                        @Html.ValidationMessageFor(model => model.ItemRefferedByOrReason, "", new { @class = "text-danger" })
                                    </div>
                                </div>
                                <div class="col-md-6">
                                    <div class="form-group">
                                        <label>Approved By </label>
                                        @Html.EditorFor(model => model.ItemApprovedBy, new { htmlAttributes = new { @class = "form-control", @onkeypress = "return isCharacter(event)", @autocomplete = "off" } })
                                        @Html.ValidationMessageFor(model => model.ItemApprovedBy, "", new { @class = "text-danger" })
                                    </div>
                                </div>
                                <div class="col-md-6">
                                    <div class="form-group">
                                        <label>Created By </label>
                                        @Html.EditorFor(model => model.CreatedByName, new { htmlAttributes = new { @class = "form-control", @onkeypress = "return isCharacter(event)", @autocomplete = "off", @readonly = "readonly" } })
                                    </div>
                                </div>
                                <div class="col-md-6">
                                    <div class="form-group">
                                        <label>Product Images </label> <br />
                                        @if (!string.IsNullOrEmpty(Model.ItemImage1))
                                        {
                                            @*<a href='@Url.Content(Model.ItemImage1)' class="js-img-viwer">
                                                <img src='@Url.Content(Model.ItemImage1)' alt="aadhaar_image" class="img-responsive js-img-viwer" height="100" width="100" />
                                            </a>*@
                                            <a data-fancybox="gallery" href='@Url.Content(Model.ItemImage1)'><img src='@Url.Content(Model.ItemImage1)'></a>

                                        }
                                        else
                                        {
                                            <img src="~/images/No_picture_available.png" alt="aadhaar_image" class="img-responsive" height="100" />
                                        }
                                        @if (!string.IsNullOrEmpty(Model.ItemImage2))
                                        {
                                            @*<a href='@Url.Content(Model .ItemImage2)' class="js-img-viwer">
                                                <img src='@Url.Content(Model.ItemImage2)' alt="aadhaar_image" class="img-responsive js-img-viwer" height="100" width="100" />
                                            </a>*@
                                            <a data-fancybox="gallery" href='@Url.Content(Model.ItemImage2)'><img src='@Url.Content(Model.ItemImage2)'></a>
                                        }
                                        else
                                        {
                                            <img src="~/images/No_picture_available.png" alt="aadhaar_image" class="img-responsive" height="100" />
                                        }
                                    </div>
                                </div>
                            </div>
                            <div class="clearfix"></div>
                            <div class="text-center">
                                <button type="submit" class="btn btn-primary">Approve</button>
                                <a href="#" class="btn btn-danger" onclick="btnReject(@Model.ItemId)">Reject</a>
                            </div>
                        }
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>
<div id="progress" class="modal">
    <div class="center" style="margin: 0px; padding: 0px; position: fixed; right: 0px; top: 0px; width: 100%; height: 100%; background-color: rgb(102, 102, 102); z-index: 30001; opacity: 0.8;">
        <p style="position: absolute; color: White; top: 50%; left: 45%;">
            Loading, please wait... <img src="~/images/loading.gif" height="100" width="100" />
        </p>
    </div>
</div>

<script>
    function onItemSuccess_Ajax(data) {
        if (data == "Success") {
            swal({
                title: "Success!",
                text: "Category approved successfully!!",
                type: "success",
                icon: "success",
            }).then(function () {
                window.location = '@Url.Action("Index", "Dashboard")';
            });
        }
        else if (data == "SessionExpired") {
            swal({
                title: "Warning!",
                text: "Your Session Expired, Login again..",
                type: "warning",
                icon: "warning",
            }).then(function () {
                window.location = '@Url.Action("Index", "Login")';
            });
        }
        else {
            swal({
                title: "Error",
                text: data,
                type: "error",
                icon: "error",
            }).then(function () {
                window.location = '@Url.Action("Index", "Dashboard")';
            });
        }
    }
    function ddlChildCategoryChanged() {
        var ChildCategoryID = $("#ChildCategoryId option:selected").val();
        $("#ChildCategoryName").val($("#ChildCategoryId option:selected").text());
        $.ajax({
            type: 'POST',
            dataType: 'json',
            data: '{ChildCategoryID: ' + ChildCategoryID + '}',
            contentType: 'application/json',
            url: '@Url.Action("GetParentCategories", "ItemCategory")',
            success: function (data) {
                $("#SubCategoryId").val(data.SubCategoryId);
                $("#SubCategoryName").val(data.SubCategoryName);
                $("#MainCategoryName").val(data.MainCategoryName);
            },

            error: function () {
                alert("Error loading data! Please try again.");
            }
        });
    }
</script>

<script>
    function btnReject(ItemID) {
        swal({
            title: "Are you sure?",
            text: "You will not be able to activate this product!",
            icon: "warning",
            buttons: [
                'No, cancel it!',
                'Yes, I am sure!'
            ],
            dangerMode: true,
        }).then(function (isConfirm) {
            if (isConfirm) {
                $.ajax({
                    type: "POST",
                    url: '@Url.Action("RejectItemCategory", "ApproveCategories")',
                    dataType: "json",
                    contentType: "application/json",
                    data: '{CategoryID: ' + JSON.stringify(ItemID) + '}',
                    success: function (res) {
                        if (res == "success") {
                            swal({
                                title: 'Rejected!',
                                text: 'Product rejected!',
                                icon: 'success'
                            }).then(function () {
                                window.location = '@Url.Action("Index", "Dashboard")';
                            });
                        }
                        else {
                            swal({
                                title: 'Error!',
                                text: 'Please contact administrator!',
                                icon: 'error'
                            }).then(function () {
                                window.location = '@Url.Action("Index", "Dashboard")';
                            });
                        }
                    }
                });

            } else {
                swal("Cancelled", "You have clicked on cancel :)", "error");
            }
        })
    }
</script>