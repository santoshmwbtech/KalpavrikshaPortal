@model JBNClassLibrary.UserCreation


@using (Ajax.BeginForm("Save", "WebUsers", null, new AjaxOptions
{
    UpdateTargetId = "divList",
    OnBegin = "onBegin_Ajax",
    OnComplete = "onSaveCompleteCreate_Ajax",
    OnSuccess = "onCreateSuccess_Ajax",
    OnFailure = "onFailure_Ajax",
    HttpMethod = "post",
    LoadingElementId = "progress"
}, new { @class = "form-sample" }))
{
    @Html.AntiForgeryToken()
    <p class="card-description">

    </p>
    <div class="row">
        <div class="col-md-6">
            <div class="form-group">
                <label>Role</label>
                @Html.DropDownListFor(model => model.RoleID, (SelectList)ViewBag.RolesList, "Select Role", new { @required = "Required", @class = "form-control dropdowns", @autocomplete = "off" })
                @Html.ValidationMessageFor(model => model.RoleID, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="col-md-6">
            <div class="form-group">
                <label>Full Name</label>
                @Html.EditorFor(model => model.FullName, new { htmlAttributes = new { @class = "form-control", @required = "Required", placeholder = "Enter Full Name", @autocomplete = "off", @onkeypress = "return isCharacter(event)" } })
                @Html.ValidationMessageFor(model => model.FullName, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="col-md-6">
            <div class="form-group">
                <label>User Name</label>
                @Html.EditorFor(model => model.Username, new { htmlAttributes = new { @class = "form-control", @required = "Required", placeholder = "Enter UserName", onchange = "UserCheck()", @autocomplete = "off" } })
                @Html.ValidationMessageFor(model => model.Username, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="col-md-6">
            <div class="form-group">
                <label>Mobile Number</label>
                @Html.EditorFor(model => model.MNumber, new { htmlAttributes = new { @class = "form-control", @required = "Required", @maxlength = "10", placeholder = "Mobile Number", @onkeypress = "return isNumber(event)", @autocomplete = "off" } })
                @Html.ValidationMessageFor(model => model.MNumber, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="col-md-6">
            <div class="form-group">
                <label>Password</label>
                @Html.EditorFor(model => model.Password, new { htmlAttributes = new { @class = "form-control", @required = "Required", placeholder = "Enter Password", @autocomplete = "off" } })
                @Html.ValidationMessageFor(model => model.Password, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="col-md-6">
            <div class="form-check">
                <label style="margin-left:20px;margin-top:40px;"></label>
                <label>
                    @Html.CheckBoxFor(model => model.IsActive, new { @class = "form-check-input", @style = "height:15px;width:15px;" })
                    Active
                </label>
            </div>
        </div>
    </div>
    <div class="text-center">
        <button type="submit" class="btn btn-primary ">Submit</button>
    </div>
}


<script>
    $.validator.unobtrusive.parse(document);
</script>