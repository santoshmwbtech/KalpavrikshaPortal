@model JBNClassLibrary.CityWiseDetails.PromoWithList

@using (Ajax.BeginForm("Promo", "CitywiseRpt", null, new AjaxOptions
{
    OnSuccess = "onPromoSuccess_Ajax",
    HttpMethod = "post"
}, new { @class = "form-sample", @id = "frm-example1", @enctype = "multipart/form-data" }))
{
    @Html.AntiForgeryToken()
    <div class="table-responsive pt-3">
        <table class="table table-bordered dataGrid">
            <thead>
                <tr>
                    <th>
                        State
                    </th>
                    <th>
                        Total Registered Dealers
                    </th>
                    <th class="text-center">@Html.CheckBox("CheckAll", false, new { id = "select_all" })</th>
                </tr>
            </thead>
            <tbody>
                @if (Model != null)
                {
                    if (Model.cityWiseRpts.Count() > 0)
                    {
                        int j = 0;
                        foreach (var item in Model.cityWiseRpts)
                        {
                            <tr>
                                <td>
                                    @Html.TextBoxFor(a => a.cityWiseRpts[j].StateName, new { @style = "border:none;width:100%;", @class = "forom-control" })
                                </td>
                                <td>
                                    @Html.TextBoxFor(a => a.cityWiseRpts[j].TtlRegDealers, new { @style = "border:none;width:100%;", @class = "forom-control" })
                                </td>
                                <td class="text-center">
                                    @Html.CheckBoxFor(a => a.cityWiseRpts[j].IsChecked, new { @class = "chhselect" })
                                </td>
                            </tr>
                            j++;
                        }
                    }
                }
            </tbody>
        </table>
    </div>
    <h4 class="card-title">Promote</h4>
    <p class="card-description">

    </p>
    <div class="row">
        <div class="col-md-4">

        </div>
        <div class="col-md-2">
            <div class="form-group">
                <div class="form-check">
                    @Html.CheckBoxFor(m => m.IsEmail) Email
                </div>
            </div>
        </div>
        <div class="col-md-2">
            <div class="form-group">
                <div class="form-check">
                    @Html.CheckBoxFor(m => m.IsSMS) SMS
                </div>
            </div>
        </div>
        <div class="col-md-2">
            <div class="form-group">
                <div class="form-check">
                    @Html.CheckBoxFor(m => m.IsWhatsApp) Whatsapp
                </div>
            </div>
        </div>
        <div class="col-md-2">

        </div>
    </div>
    <div id="SMSRow" style="display:none;">
        <div class="row">
            <div class="col-md-12">
                <div class="form-group">
                    <label>SMS Body</label>
                    @Html.TextAreaFor(model => model.SMSBody, new { @class = "form-control input-lg", @required = "required", @maxlength = "160" })
                </div>
            </div>
        </div>

    </div>
    <div id="EmailRow" style="display:none;">
        <div class="row">
            <div class="col-md-12">
                <div class="form-group">
                    <label>Message</label>
                    @Html.TextAreaFor(model => model.MailBody, new { @class = "form-control input-lg textarea-editor", @required = "required" })
                </div>
            </div>
        </div>
    </div>
    <div class="clearfix"></div>
    <div class="text-center">
        <button type="submit" class="btn btn-primary" onclick="return onPromoteClick()">Promote</button>
    </div>
}
<script>
    function onPromoteClick() {
        if (!$('#IsEmail').is(':checked') && !$('#IsSMS').is(':checked') && !$('#IsWhatsApp').is(':checked')) {
            swal("Check atleast one checkbox to promote");
            return false;
        }
    }
    $("#IsEmail").click(function () {
        if (this.checked) {
            $("#IsSMS").prop('checked', false);
            $("#IsWhatsApp").prop('checked', false);
            $("#SMSRow").hide();
            $("#EmailRow").show();
            $('.textarea-editor').summernote({
                height: 100, // set editor height
                minHeight: null, // set minimum height of editor
                maxHeight: null, // set maximum height of editor
                focus: false // set focus to editable area after initializing summernote
            });
        }
    });
    $("#IsSMS").click(function () {
        if (this.checked) {
            $("#IsEmail").prop('checked', false);
            $("#IsWhatsApp").prop('checked', false);
            $("#SMSRow").show();
            $("#EmailRow").hide();
        }
    });
    $("#IsWhatsApp").click(function () {
        if (this.checked) {
            $("#IsEmail").prop('checked', false);
            $("#IsSMS").prop('checked', false);
        }
    });
</script>
