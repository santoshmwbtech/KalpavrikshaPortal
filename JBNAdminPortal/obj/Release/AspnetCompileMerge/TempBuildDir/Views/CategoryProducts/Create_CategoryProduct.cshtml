@model JBNClassLibrary.MainCategory

<div class="col-12 grid-margin">
    <div class="card card-outline-primary">
        <div class="card-body">
            <h4 class="card-title">Create Main Category</h4>
            @using (Ajax.BeginForm("Create_CategoryProduct", "CategoryProducts", null, new AjaxOptions
            {
                UpdateTargetId = "divCreate",
                OnSuccess = "onCreateSuccess_Ajax",
                OnFailure = "onFailure_Ajax",
                HttpMethod = "post",
                LoadingElementId = "progress"
            }, new { @class = "form-sample" }))
            {
                @Html.AntiForgeryToken()
                <p class="card-description">

                </p>
                <div class="row">
                    <div class="col-md-6">
                        <div class="form-group">
                            <label>Main Category Name</label>
                            @Html.EditorFor(model => model.MainCategoryName, new { htmlAttributes = new { @class = "form-control", @onkeypress = "return isCharacter(event)", @autocomplete = "off" } })
                            @Html.ValidationMessageFor(model => model.MainCategoryName, "", new { @class = "text-danger" })
                        </div>
                    </div>
                    <div class="col-md-6">
                        <div class="form-group">
                            <label>Reffered By or Reason</label>
                            @Html.EditorFor(model => model.RefferedByOrReason, new { htmlAttributes = new { @class = "form-control", @onkeypress = "return isCharacter(event)", @autocomplete = "off" } })
                            @Html.ValidationMessageFor(model => model.RefferedByOrReason, "", new { @class = "text-danger" })
                        </div>
                    </div>
                    <div class="col-md-6">
                        <div class="form-group">
                            <label>Approved By </label>
                            @Html.EditorFor(model => model.ApprovedBy, new { htmlAttributes = new { @class = "form-control", @onkeypress = "return isCharacter(event)", @autocomplete = "off" } })
                            @Html.ValidationMessageFor(model => model.ApprovedBy, "", new { @class = "text-danger" })
                        </div>
                    </div>
                </div>
                <div class="clearfix"></div>
                <div class="text-center">
                    <button type="submit" class="btn btn-primary">Create</button>
                </div>
            }
        </div>
    </div>
</div>

<script>
    $.validator.unobtrusive.parse(document);
</script>