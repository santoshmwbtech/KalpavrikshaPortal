@model JBNAdminPortal.Models.Search

@{
    ViewBag.Title = "Launchpad Report";
}

<div class="main-panel">
    <div class="content-wrapper">
        <div class="row">
            <div class="col-12 grid-margin">
                <div class="card card-outline-primary">
                    <div class="card-body">
                        <h4 class="card-title">Enquiries</h4>
                        <p class="card-description">

                        </p>
                        @using (Ajax.BeginForm("Search", "LaunchpadReport", null, new AjaxOptions
                        {
                            UpdateTargetId = "divList",
                            OnBegin = "onBegin_Ajax",
                            OnComplete = "onSearchCompleteCreate_Ajax",
                            OnSuccess = "onSearchSuccess_Ajax",
                            //OnFailure = "onFailure_Ajax",
                            HttpMethod = "post",
                            LoadingElementId = "progress",
                        }, new { @class = "form-sample" }))
                        {
                            <div class="row">
                                <div class="col-md-3">
                                    <div class="form-group">
                                        <label>From Date</label>
                                        @Html.EditorFor(a => a.FromDate, new { htmlAttributes = new { @class = "form-control dated", @placeholder = "From Date", @autocomplete = "off" } })
                                    </div>
                                </div>
                                <div class="col-md-3">
                                    <div class="form-group">
                                        <label>To Date</label>
                                        @Html.EditorFor(a => a.ToDate, new { htmlAttributes = new { @class = "form-control dated", @placeholder = "To Date", @autocomplete = "off" } })
                                    </div>
                                </div>
                                <div class="col-md-3">
                                    <div class="form-group">
                                        <label>From Time</label>
                                        @Html.TextBoxFor(a => a.FromTime, null, new { @class = "form-control timepicker", @autocomplete = "off" })
                                    </div>
                                </div>
                                <div class="col-md-3">
                                    <div class="form-group">
                                        <label>To Time</label>
                                        @Html.TextBoxFor(a => a.ToTime, null, new { @class = "form-control timepicker", @autocomplete = "off" })
                                    </div>
                                </div>
                                <div class="col-md-3">
                                    <div class="form-group">
                                        <label>Item Name</label>
                                        @Html.DropDownListFor(a => a.ItemCategoryList, (SelectList)ViewBag.ItemCategories, new { @class = "form-control dropdowns", @multiple = "multiple" })
                                    </div>
                                </div>
                                <div class="col-md-3">
                                    <div class="form-group">
                                        <label>Business Type</label>
                                        @Html.DropDownListFor(a => a.BusinessTypeList, (SelectList)ViewBag.BusinessType, new { @class = "form-control dropdowns", @multiple = "multiple" })
                                    </div>
                                </div>
                                <div class="col-md-3">
                                    <div class="form-group">
                                        <label>Enquiry State</label>
                                        @Html.DropDownListFor(a => a.StateList, (SelectList)ViewBag.StateList, new { @class = "form-control dropdowns", @multiple = "multiple" })
                                    </div>
                                </div>
                                <div class="col-md-3">
                                    <div class="form-group">
                                        <label>Enquiry City</label>
                                        @Html.DropDownListFor(a => a.CityList, (SelectList)ViewBag.EnquiryCities, new { @class = "form-control dropdowns", @multiple = "multiple" })
                                    </div>
                                </div>
                                <div class="col-md-3">
                                    <div class="form-group">
                                        <label>Business Type</label>
                                        @Html.DropDownListFor(a => a.BusinessDemandID, (SelectList)ViewBag.BusinessDemands, new { @class = "form-control dropdowns" })
                                    </div>
                                </div>
                                <div class="col-md-3">
                                    <div class="form-group">
                                        <label>Purpose of Business</label>
                                        @Html.DropDownListFor(a => a.PurposeOfBusiness, new List<SelectListItem>
                                        {
                                            new SelectListItem{ Text="Select Purpose Of Business", Value = "" },
                                            new SelectListItem{ Text="Home", Value = "home" },
                                            new SelectListItem{ Text="Business", Value = "business" },
                                            new SelectListItem{ Text="Reselling", Value = "reselling" },
                                         }, new { @class = "form-control dropdowns" })
                                    </div>
                                </div>
                                <div class="col-md-3">
                                    <div class="form-group">
                                        <div class="form-check form-check-flat form-check-primary">
                                            <label class="form-check-label">
                                                <input type="checkbox" class="form-check-input" id="ChkInterstCountry" name="ChkInterstCountry" onclick="CountryChecked()">
                                                Country
                                            </label>
                                            @Html.HiddenFor(a => a.InterstCountry)
                                        </div>
                                        <div class="form-check form-check-flat form-check-primary">
                                            <label class="form-check-label">
                                                <input type="checkbox" class="form-check-input" id="ChkInterstState" name="ChkInterstState" onclick="StateChecked()">
                                                State
                                            </label>
                                            @Html.HiddenFor(a => a.InterstState)
                                        </div>
                                        <div class="form-check form-check-flat form-check-primary">
                                            <label class="form-check-label">
                                                <input type="checkbox" class="form-check-input" id="ChkInterstCity" name="ChkInterstCity" onclick="CityChecked()">
                                                City
                                            </label>
                                            @Html.HiddenFor(a => a.InterstCity)
                                        </div>
                                    </div>
                                </div>
                            </div>
                            <div style="text-align:center">
                                <button type="submit" class="btn btn-primary mr-2" onclick="return validateForm()">Search</button>
                            </div>
                        }
                    </div>
                </div>
            </div>
        </div>
        <div class="row">
            <div class="col-12 grid-margin">
                <div class="card card-outline-success">
                    <div class="card-body" id="divList">
                        @Html.Action("EnquiryList")
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>
<div id="progress" class="modal">
    <div class="center" style="margin: 0px; padding: 0px; position: fixed; right: 0px; top: 0px; width: 100%; height: 100%; background-color: rgb(102, 102, 102); z-index: 30001; opacity: 0.8;">
        <p style="position: absolute; color: White; top: 50%; left: 45%;">
            <span>Loading, Please Wait...</span> <img src="~/images/loading.gif" height="100" width="100" />
        </p>
    </div>
</div>
<script>
    function onSearchCompleteCreate_Ajax() {

    }
    function onSearchSuccess_Ajax() {
        LoadTable();
    }
    function onBegin_Ajax(data) {
    }
    function onFailure_Ajax() {
        swal("Error", "Please try again later", "error");
    }
    function Ajax_Edit_Failure(xhr, statusDescription) {
        swal(xhr.statusDescription);
    }
    function onEditSuccess() {
    }
    function onShareSuccess(data) {
        if (data == "Mail Sent") {
            swal("Success", data, "success");
        }
        else {
            swal("Error", data, "error");
        }
    }
    function onPromoSuccess_Ajax(result) {
        if (result == "sessionexpired") {
            swal({
                text: "Your Session Expired!! Please login again",
            }).then(function () {
                window.location = '@Url.Action("Index", "Login")';
            });
        }
        else {
            swal({
                text: result,
            }).then(function () {
                window.location = '@Url.Action("Index", "LaunchpadReport")';
            });
        }
    }
</script>
<script>
    $(document).ready(function () {
        LoadTable();
    });
    var buttonCommon = {
        exportOptions: {
            format: {
                body: function (data, column, row, node) {
                    // distinguish between a regular cell and one with an input element
                    if ($(node)[0].children.length === 0) {
                        return data;
                    }
                    else {
                        return $(data).val();
                    }
                }
            }
        }
    };
    function LoadTable() {
        var fDate = $("#FromDate").val();
        var tDate = $("#ToDate").val();
        var fTime = $("#FromTime").val();
        var tTime = $("#ToTime").val();
        var sState = $("#StateList option:selected").text();
        var sCity = $("#CityList option:selected").text();
        var sBD = $("#BusinessDemandID option:selected").text();
        var sPOB = $("#PurposeOfBusiness option:selected").text();

        if (sBD.includes("Select")) {
            sBD = "";
        }

        if (sPOB.includes("Select")) {
            sPOB = "";
        }

        var filterOptions = "Filter By : From Date -" + fDate + " To Date -" + tDate + " From Time -" + fTime + " To Time -" + tTime + " States -" + sState + " Cities -" + sCity + " Business Demand -" + sBD + " Purpose of Business -" + sPOB;
        $(".dataGrid").dataTable().fnDestroy();
        var table = $('.dataGrid').DataTable({
            dom: 'Bfrtip',
            pageLength: 5,
            "buttons": [
                $.extend(true, {}, buttonCommon, {
                    extend: 'excel',
                    exportOptions: { columns: 'thead th:not(.noExport)' },
                    messageTop: filterOptions
                }),
                $.extend(true, {}, buttonCommon, {
                    extend: 'csv',
                    exportOptions: { columns: 'thead th:not(.noExport)' },
                    messageTop: filterOptions
                }),
            ],
        });

        $('#select_all').click(function () {
            //var c = this.checked;
            //$('.chhselect').prop('checked', c)
            $(':checkbox', table.rows().nodes()).prop('checked', this.checked);
        });

        $(".chhselect").click(function () {
            if (!this.checked) {
                $("#select_all").prop('checked', false);
            }
            else if ($(".chhselect").length == $(".chhselect:checked").length) {
                $("#select_all").prop('checked', true);
            }
        });

        // Handle form submission event
        $('#frm-promote').on('submit', function (e) {
            var form = this;

            // Encode a set of form elements from all pages as an array of names and values
            var params = table.$('input,select,textarea').serializeArray();

            // Iterate over all form elements
            $.each(params, function () {
                // If element doesn't exist in DOM
                if (!$.contains(document, form[this.name])) {
                    // Create a hidden element
                    $(form).append(
                        $('<input>')
                            .attr('type', 'hidden')
                            .attr('name', this.name)
                            .val(this.value)
                    );
                }
            });
        });
    }
</script>
<script>
    function StateChanged(element) {
        var StateID = $(element).val();
        $("#progress").show();
        $("#progress p span").text("Loading Cities.. Please Wait..");
        $.ajax({
            dataType: "json",
            contentType: "application/json; charset=utf-8",
            type: 'POST',
            data: "{ 'StateID': '" + StateID + "'}",
            url: '@Url.Action("GetCitiesofState", "BusinessTypeWiseRpt")',
            success: function (data) {
                //$("#StateWithCityID").append('<option value="0">Select City</option>');
                $.each(data, function (index, value) {
                    $("#StateWithCityID").append('<option value="' + value.StatewithCityID + '">' + value.VillageLocalityName + '</option>');
                });
                $("#progress").hide();
                $("#progress p span").text("Loading.. Please Wait..");
                $("#StateWithCityID").focus();
            },
            error: function (response) {
                alert(response.error);
            }
        });
    }
</script>
<script type="text/javascript">
    //Assign Click event to Plus Image.
    $("body").on("click", "img[src*='plus.png']", function () {
        $(this).closest("tr").after("<tr><td></td><td colspan = '999'>" + $(this).next().html() + "</td></tr>");
        $(this).attr("src", "images/minus.png");
        const sm = new SmartPhoto(".js-img-viwer", {
            showAnimation: false
        });
    });
    //Assign Click event to Minus Image.
    $("body").on("click", "img[src*='minus.png']", function () {
        $(this).attr("src", "images/plus.png");
        $(this).closest("tr").next().remove();
    });

    //validate form
    function validateForm() {
        var fromTime = $("#FromTime").val();
        var toTime = $("#ToTime").val();

        if (fromTime != "" && toTime != "") {
            if ($("#FromDate").val() == "" || $("#ToDate").val() == "") {
                CreateNotification("error", "Dates not selected!", "Please select FromDate and ToDate");
                return false;
            }
        }
    }
</script>
<script>
    function CountryChecked() {
        var CountryChk = $("#ChkInterstCountry");
        if ($(CountryChk).prop("checked")) {
            $("#InterstCountry").val(true);
        } else {
            $("#InterstCountry").val(false);
        }
    }
    function StateChecked() {
        var StateChk = $("#ChkInterstState");
        if ($(StateChk).prop("checked")) {
            $("#InterstState").val(true);
        } else {
            $("#InterstState").val(false);
        }
    }
    function CityChecked() {
        var CityChk = $("#ChkInterstCity");
        if ($(CityChk).prop("checked")) {
            $("#InterstCity").val(true);
        } else {
            $("#InterstCity").val(false);
        }
    }
</script>
