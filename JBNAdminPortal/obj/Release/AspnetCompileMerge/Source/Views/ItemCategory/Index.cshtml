@model IEnumerable<JBNClassLibrary.ItemCategory>

@{
    ViewBag.Title = "Item Categories";
}

<div class="main-panel">
    <div class="content-wrapper">
        <div class="row">
            <div class="col-md-12 grid-margin">
                <div class="d-flex justify-content-between align-items-center">
                    <div>
                        <h4 class="font-weight-bold mb-0"></h4>
                    </div>
                    <div>
                        <button type="button" class="btn btn-primary btn-icon-text btn-rounded" onclick="btnexcel_Click()">
                            <i class="ti-clipboard btn-icon-prepend"></i>Export All
                        </button>
                    </div>
                </div>
            </div>
        </div>
        <div class="row" id="divCreate">
            @if (Request.QueryString["route"] != null)
            {
                if (@Request.QueryString["route"].ToString() != "view")
                {
                    @Html.Action("Create")
                }
            }
            else
            {
                @Html.Action("Create")
            }
        </div>
        @if (Request.QueryString["route"] != null)
        {
            if (@Request.QueryString["route"].ToString() != "create")
            {
                <div class="row">
                    <div class="col-12 grid-margin">
                        <div class="card card-outline-success">
                            <div class="card-body">
                                <div id="dvSearch">
                                    @if (Request.QueryString["route"] != null)
                                    {
                                        if (@Request.QueryString["route"].ToString() != "create")
                                        {
                                            @Html.Action("Search")
                                        }
                                    }
                                    else
                                    {
                                        @Html.Action("Search")
                                    }
                                </div>
                                <div id="dvList">
                                    @if (Request.QueryString["route"] != null)
                                    {
                                        if (@Request.QueryString["route"].ToString() != "create")
                                        {
                                            @Html.Action("ItemCategoryList")
                                        }
                                    }
                                    else
                                    {
                                        @Html.Action("ItemCategoryList")
                                    }

                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            }
        }

    </div>
</div>

<div id="progress" class="modal">
    <div class="center" style="margin: 0px; padding: 0px; position: fixed; right: 0px; top: 0px; width: 100%; height: 100%; background-color: rgb(102, 102, 102); z-index: 30001; opacity: 0.8;">
        <p style="position: absolute; color: White; top: 50%; left: 45%;">
            <span>Loading, Please Wait...</span> <img src="~/images/loading.gif" height="100" width="100" />
        </p>
    </div>
</div>

<script>
    function onCreateSuccess_Ajax(Result) {
        if (Result == "sessionexpired") {
         window.location = '@Url.Action("Index", "Login")';
        }
        swal(Result);
        $("#divCreate").load('@Url.Action("Create", "ItemCategory")');
        setTimeout(function(){ $(".dropdowns").select2(); }, 1000);
    }
    function onEditSuccess_Ajax(Result) {
        swal(Result);
        $("#divCreate").empty();
    }
    function onBegin_Ajax(data) {
    }
    function onFailure_Ajax() {
        swal("Error", "Please try again later", "error");
    }
    function Ajax_Edit_Failure(xhr, statusDescription) {
        swal(xhr.statusDescription);
    }
    function onEditSuccess() {
        $("#ItemName").focus();
        $(".dropdowns").select2();
    }
    function Ajax_OnComplete() {

    }
    function SearchSuccess() {
        $('.dataGrid').dataTable({
            dom: 'Bfrtip',
            //buttons: [
            //    'csv', 'excel', 'pdf'
            //]
            buttons: [{
                extend: 'pdf',
                exportOptions: {
                    columns: "thead th:not(.noExport)"
                }
            }, {
                extend: 'excel',
                exportOptions: {
                    columns: "thead th:not(.noExport)"
                }
            }, {
                extend: 'csv',
                exportOptions: {
                    columns: "thead th:not(.noExport)"
                }
            }
            ]
        });
    }
</script>
<script>
    function btnCancel_Click() {
        @*$('#divCreate').load('@Url.Action("Create","ItemCategory")');*@
        $('#divCreate').empty();
        setTimeout(function () {
            $("#ItemName").focus();
            $(".dropdowns").select2();
        }, 1000);

    }
    $('.fileimput').change(function(){
        if (this.files.length > 2) {
            swal('Upload only 2 Images');
            $(this).val('');
        }
    });
</script>

<script>
    function ddlChildCategoryChanged() {
        var ChildCategoryID = $("#ChildCategoryId option:selected").val();
        $.ajax({
            type: 'POST',
            dataType: 'json',
            data: '{ChildCategoryID: ' + ChildCategoryID + '}',
            contentType: 'application/json',
            url: '@Url.Action("GetParentCategories", "ItemCategory")',
            success: function (data) {
                $("#SubCategoryId").val(data.SubCategoryId);
                $("#SubCategoryName").val(data.SubCategoryName);
                $("#MainCategoryName").val(data.MainCategoryName);
            },

            error: function () {
                swal("Error loading data! Please try again.");
            }
        });
    }
</script>

<script type="text/javascript">
    $(function () {
        $("#MainCategoryName").autocomplete({
            source: function (request, response) {
                $.ajax({
                    url: '@Url.Action("Search", "ItemCategory")',
                    data: "{ 'prefix': '" + request.term + "'}",
                    dataType: "json",
                    type: "POST",
                    success: function (data) {
                        response($.map(data, function (item) {
                            return {
                                    label: item.MainCategoryName,
                                    val: item.CategoryProductID
                                }
                        }))
                    },
                    error: function (response) {
                        swal(response.responseText);
                    },
                    failure: function (response) {
                        swal(response.responseText);
                    }
                });
            },

        });
    });
    function Search() {
        $("#progress").show();
        $("#progress span").html("Loading Item List, Please wait..");
        $.ajax({
            type: "POST",
            url: "@Url.Action("ItemCategoryListJson", "ItemCategory")",
            contentType: "HTML",
            success: function (response) {
                $("#dvList").html('');
                $("#dvList").html(response);
                $("#progress span").html("Loading, Please wait..");
                $("#progress").hide();
                $('.dataGrid').dataTable({
                    "processing": true,
                    "serverSide": true,
                });
            }
        });
    }
    $('#ItemName').change(function () {
            var selection = $('#ItemName').val();
            if (selection.length > 0) {
                $.post('@Url.Action("CheckDuplicateName", "ItemCategory")', { ItemName: selection},
            function (data) {
                if (data == 0) {
                    $("#ItemName").html('<font color="Green">Available !. you can take it.</font>');
                    $("#ItemName").css("border-color", "Green");
                }
                else {
                    CreateNotification("error", "Error", "Category Name already created..");
                    $("#ItemName").val('');
                    $("#ItemName").focus();
                }
            })
        }
    });
    function btnexcel_Click() {
        $("#progress").show();
        $.ajax({
            url: '@Url.Action("excelexport", "ItemCategory")',
            type: 'POST',
            contentType: 'application/json; charset=utf-8',
            success: function (data) {
                if (data == false) {
                    swal("No Data found");
                    $("#progress").hide();
                }
                else {
                    window.location = '@Url.Action("Download", "ItemCategory")?fileGuid=' + data.FileGuid + '&filename=' + data.FileName;
                    $("#progress").hide();
                }
            },
            error: function (response) {
                swal(response);
                swal("Error in excel download");
                $("#progress").hide();
            }
        });
    }
</script>
